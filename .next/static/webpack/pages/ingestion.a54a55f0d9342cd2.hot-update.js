"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/ingestion",{

/***/ "(pages-dir-browser)/./src/components/ingestion/IngestionStatus.tsx":
/*!******************************************************!*\
  !*** ./src/components/ingestion/IngestionStatus.tsx ***!
  \******************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IngestionStatus)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_ui_Card__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/ui/Card */ \"(pages-dir-browser)/./src/components/ui/Card.tsx\");\n/* harmony import */ var _components_ui_Badge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/ui/Badge */ \"(pages-dir-browser)/./src/components/ui/Badge.tsx\");\n/* harmony import */ var _components_ui_Table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/ui/Table */ \"(pages-dir-browser)/./src/components/ui/Table.tsx\");\n/* harmony import */ var _components_ui_Button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/components/ui/Button */ \"(pages-dir-browser)/./src/components/ui/Button.tsx\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\nfunction IngestionStatus() {\n    _s();\n    const [ingestionJobs, setIngestionJobs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [refreshInterval, setRefreshInterval] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const fetchJobs = async ()=>{\n        try {\n            setLoading(true);\n            // In a real application, this would fetch from the API\n            const response = await fetch(\"/api/ingestion\");\n            const data = await response.json();\n            console.log(data, \"data\");\n            setIngestionJobs(data);\n        // For now, use mock data and simulate job progress changes\n        // Simulate progress change for processing jobs\n        //  const updatedJobs = [...mockIngestionJobs].map((job) => {\n        //    if (job.status === \"processing\") {\n        //      const newProgress = Math.min(\n        //        job.progress + Math.floor(Math.random() * 10),\n        //        100\n        //      );\n        //      // Once progress reaches 100, mark as completed\n        //      if (newProgress === 100) {\n        //        return {\n        //          ...job,\n        //          progress: newProgress,\n        //          status: \"completed\" as const,\n        //          completedAt: new Date().toISOString(),\n        //        };\n        //      }\n        //      return { ...job, progress: newProgress };\n        //    }\n        //    return job;\n        //  });\n        //  setIngestionJobs(updatedJobs);\n        } catch (error) {\n            setError(\"Failed to fetch ingestion jobs\");\n            console.error(\"Error fetching ingestion jobs:\", error);\n        } finally{\n            setLoading(false);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"IngestionStatus.useEffect\": ()=>{\n            fetchJobs();\n        // Simulate real-time updates by polling every 5 seconds\n        //const interval = setInterval(fetchJobs, 10000);\n        //setRefreshInterval(interval);\n        //return () => {\n        //  if (refreshInterval) {\n        //    clearInterval(refreshInterval);\n        //  }\n        //};\n        }\n    }[\"IngestionStatus.useEffect\"], []);\n    // Cancel an ingestion job\n    const handleCancelJob = async (jobId)=>{\n        try {\n            setLoading(true);\n            // In a real application, this would call the API\n            // await fetchWithAuth(`/ingestion/jobs/${jobId}/cancel`, {\n            //   method: 'POST',\n            // });\n            // For now, simulate cancellation\n            await new Promise((resolve)=>setTimeout(resolve, 500)); // Simulate API delay\n        //  setIngestionJobs(\n        //    ingestionJobs.map((job) =>\n        //      job.id === jobId\n        //        ? { ...job, status: \"failed\", error: \"Job cancelled by user\" }\n        //        : job\n        //    )\n        //  );\n        } catch (error) {\n            setError(\"Failed to cancel job\");\n            console.error(\"Error cancelling job:\", error);\n        } finally{\n            setLoading(false);\n        }\n    };\n    // Retry a failed ingestion job\n    const handleRetryJob = async (jobId)=>{\n        try {\n            setLoading(true);\n            // In a real application, this would call the API\n            // await fetchWithAuth(`/ingestion/jobs/${jobId}/retry`, {\n            //   method: 'POST',\n            // });\n            // For now, simulate retry\n            await new Promise((resolve)=>setTimeout(resolve, 500)); // Simulate API delay\n        //  setIngestionJobs(\n        //    ingestionJobs.map((job) =>\n        //      job.id === jobId\n        //        ? { ...job, status: \"processing\", progress: 0, error: undefined }\n        //        : job\n        //    )\n        //  );\n        } catch (error) {\n            setError(\"Failed to retry job\");\n            console.error(\"Error retrying job:\", error);\n        } finally{\n            setLoading(false);\n        }\n    };\n    const columns = [\n        {\n            header: \"Document\",\n            accessor: \"documenttitle\"\n        },\n        {\n            header: \"Status\",\n            accessor: (job)=>{\n                const statusVariant = job.status === \"completed\" ? \"success\" : \"warning\";\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_Badge__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                    variant: statusVariant,\n                    children: job.status\n                }, void 0, false, {\n                    fileName: \"/Users/pratikyadav/Downloads/DocumentIntelligence/src/components/ingestion/IngestionStatus.tsx\",\n                    lineNumber: 139,\n                    columnNumber: 16\n                }, this);\n            }\n        },\n        {\n            header: \"Progress\",\n            accessor: (job)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"w-full bg-gray-200 rounded-full h-2.5\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"h-2.5 rounded-full \".concat(job.status === \"completed\" ? \"bg-green-600\" : job.status === \"failed\" ? \"bg-red-600\" : \"bg-blue-600\"),\n                            style: {\n                                width: \"\".concat(job.progress, \"%\")\n                            }\n                        }, void 0, false, {\n                            fileName: \"/Users/pratikyadav/Downloads/DocumentIntelligence/src/components/ingestion/IngestionStatus.tsx\",\n                            lineNumber: 146,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"text-xs text-gray-600 mt-1\",\n                            children: [\n                                job.progress,\n                                \"%\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/pratikyadav/Downloads/DocumentIntelligence/src/components/ingestion/IngestionStatus.tsx\",\n                            lineNumber: 156,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/pratikyadav/Downloads/DocumentIntelligence/src/components/ingestion/IngestionStatus.tsx\",\n                    lineNumber: 145,\n                    columnNumber: 9\n                }, this)\n        },\n        {\n            header: \"Started\",\n            accessor: (job)=>new Date(job.startedat).toLocaleString()\n        },\n        {\n            header: \"Completed\",\n            accessor: (job)=>job.updatedat ? new Date(job.updatedat).toLocaleString() : \"-\"\n        },\n        {\n            header: \"Actions\",\n            accessor: (job)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex space-x-2\",\n                    children: [\n                        job.status === \"processing\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_Button__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                            variant: \"outline\",\n                            size: \"sm\",\n                            onClick: ()=>handleCancelJob(job.id),\n                            children: \"Cancel\"\n                        }, void 0, false, {\n                            fileName: \"/Users/pratikyadav/Downloads/DocumentIntelligence/src/components/ingestion/IngestionStatus.tsx\",\n                            lineNumber: 174,\n                            columnNumber: 13\n                        }, this),\n                        job.status === \"failed\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_Button__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                            variant: \"outline\",\n                            size: \"sm\",\n                            onClick: ()=>handleRetryJob(job.id),\n                            children: \"Retry\"\n                        }, void 0, false, {\n                            fileName: \"/Users/pratikyadav/Downloads/DocumentIntelligence/src/components/ingestion/IngestionStatus.tsx\",\n                            lineNumber: 183,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/pratikyadav/Downloads/DocumentIntelligence/src/components/ingestion/IngestionStatus.tsx\",\n                    lineNumber: 172,\n                    columnNumber: 9\n                }, this)\n        }\n    ];\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_Card__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n        title: \"Ingestion Status\",\n        children: loading && !ingestionJobs.length ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex justify-center py-10\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"animate-spin rounded-full h-10 w-10 border-t-2 border-b-2 border-blue-500\"\n            }, void 0, false, {\n                fileName: \"/Users/pratikyadav/Downloads/DocumentIntelligence/src/components/ingestion/IngestionStatus.tsx\",\n                lineNumber: 200,\n                columnNumber: 11\n            }, this)\n        }, void 0, false, {\n            fileName: \"/Users/pratikyadav/Downloads/DocumentIntelligence/src/components/ingestion/IngestionStatus.tsx\",\n            lineNumber: 199,\n            columnNumber: 9\n        }, this) : error ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"p-4 text-red-500 bg-red-100 rounded-md\",\n            children: error\n        }, void 0, false, {\n            fileName: \"/Users/pratikyadav/Downloads/DocumentIntelligence/src/components/ingestion/IngestionStatus.tsx\",\n            lineNumber: 203,\n            columnNumber: 9\n        }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"mb-4 flex justify-end\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_Button__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                        variant: \"outline\",\n                        size: \"sm\",\n                        onClick: fetchJobs,\n                        children: \"Refresh\"\n                    }, void 0, false, {\n                        fileName: \"/Users/pratikyadav/Downloads/DocumentIntelligence/src/components/ingestion/IngestionStatus.tsx\",\n                        lineNumber: 207,\n                        columnNumber: 13\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/pratikyadav/Downloads/DocumentIntelligence/src/components/ingestion/IngestionStatus.tsx\",\n                    lineNumber: 206,\n                    columnNumber: 11\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_Table__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                    columns: columns,\n                    data: ingestionJobs,\n                    emptyMessage: \"No ingestion jobs found\"\n                }, void 0, false, {\n                    fileName: \"/Users/pratikyadav/Downloads/DocumentIntelligence/src/components/ingestion/IngestionStatus.tsx\",\n                    lineNumber: 211,\n                    columnNumber: 11\n                }, this)\n            ]\n        }, void 0, true)\n    }, void 0, false, {\n        fileName: \"/Users/pratikyadav/Downloads/DocumentIntelligence/src/components/ingestion/IngestionStatus.tsx\",\n        lineNumber: 197,\n        columnNumber: 5\n    }, this);\n}\n_s(IngestionStatus, \"3HUsPGy8mF8AZM0QmnxQoQMh394=\");\n_c = IngestionStatus;\nvar _c;\n$RefreshReg$(_c, \"IngestionStatus\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL2luZ2VzdGlvbi9Jbmdlc3Rpb25TdGF0dXMudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQTRDO0FBQ0o7QUFDRTtBQUNBO0FBQ0U7QUFLN0IsU0FBU007O0lBQ3RCLE1BQU0sQ0FBQ0MsZUFBZUMsaUJBQWlCLEdBQUdSLCtDQUFRQSxDQUFpQixFQUFFO0lBQ3JFLE1BQU0sQ0FBQ1MsU0FBU0MsV0FBVyxHQUFHViwrQ0FBUUEsQ0FBQztJQUN2QyxNQUFNLENBQUNXLE9BQU9DLFNBQVMsR0FBR1osK0NBQVFBLENBQWdCO0lBQ2xELE1BQU0sQ0FBQ2EsaUJBQWlCQyxtQkFBbUIsR0FBR2QsK0NBQVFBLENBQ3BEO0lBR0YsTUFBTWUsWUFBWTtRQUNoQixJQUFJO1lBQ0ZMLFdBQVc7WUFDWCx1REFBdUQ7WUFDdkQsTUFBTU0sV0FBVyxNQUFNQyxNQUFNO1lBQzdCLE1BQU1DLE9BQU8sTUFBTUYsU0FBU0csSUFBSTtZQUNoQ0MsUUFBUUMsR0FBRyxDQUFDSCxNQUFNO1lBQ2xCVixpQkFBaUJVO1FBQ2pCLDJEQUEyRDtRQUUzRCwrQ0FBK0M7UUFDL0MsNkRBQTZEO1FBQzdELHdDQUF3QztRQUN4QyxxQ0FBcUM7UUFDckMsd0RBQXdEO1FBQ3hELGFBQWE7UUFDYixVQUFVO1FBRVYsdURBQXVEO1FBQ3ZELGtDQUFrQztRQUNsQyxrQkFBa0I7UUFDbEIsbUJBQW1CO1FBQ25CLGtDQUFrQztRQUNsQyx5Q0FBeUM7UUFDekMsa0RBQWtEO1FBQ2xELFlBQVk7UUFDWixTQUFTO1FBRVQsaURBQWlEO1FBQ2pELE9BQU87UUFDUCxpQkFBaUI7UUFDakIsT0FBTztRQUVQLGtDQUFrQztRQUNwQyxFQUFFLE9BQU9QLE9BQU87WUFDZEMsU0FBUztZQUNUUSxRQUFRVCxLQUFLLENBQUMsa0NBQWtDQTtRQUNsRCxTQUFVO1lBQ1JELFdBQVc7UUFDYjtJQUNGO0lBRUFULGdEQUFTQTtxQ0FBQztZQUNSYztRQUVB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QUVELHFCQUNFLDhEQUFDN0MsMkRBQUlBO1FBQUM4QyxPQUFNO2tCQUNUdkMsV0FBVyxDQUFDRixjQUFjMEMsTUFBTSxpQkFDL0IsOERBQUNkO1lBQUlDLFdBQVU7c0JBQ2IsNEVBQUNEO2dCQUFJQyxXQUFVOzs7Ozs7Ozs7O21CQUVmekIsc0JBQ0YsOERBQUN3QjtZQUFJQyxXQUFVO3NCQUEwQ3pCOzs7OztpQ0FFekQ7OzhCQUNFLDhEQUFDd0I7b0JBQUlDLFdBQVU7OEJBQ2IsNEVBQUMvQiw2REFBTUE7d0JBQUM2QixTQUFRO3dCQUFVVyxNQUFLO3dCQUFLQyxTQUFTL0I7a0NBQVc7Ozs7Ozs7Ozs7OzhCQUkxRCw4REFBQ1gsNERBQUtBO29CQUNKd0IsU0FBU0E7b0JBQ1RWLE1BQU1YO29CQUNOMkMsY0FBYTs7Ozs7Ozs7Ozs7OztBQU16QjtHQWxOd0I1QztLQUFBQSIsInNvdXJjZXMiOlsiL1VzZXJzL3ByYXRpa3lhZGF2L0Rvd25sb2Fkcy9Eb2N1bWVudEludGVsbGlnZW5jZS9zcmMvY29tcG9uZW50cy9pbmdlc3Rpb24vSW5nZXN0aW9uU3RhdHVzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgQ2FyZCBmcm9tIFwiQC9jb21wb25lbnRzL3VpL0NhcmRcIjtcbmltcG9ydCBCYWRnZSBmcm9tIFwiQC9jb21wb25lbnRzL3VpL0JhZGdlXCI7XG5pbXBvcnQgVGFibGUgZnJvbSBcIkAvY29tcG9uZW50cy91aS9UYWJsZVwiO1xuaW1wb3J0IEJ1dHRvbiBmcm9tIFwiQC9jb21wb25lbnRzL3VpL0J1dHRvblwiO1xuaW1wb3J0IHsgSW5nZXN0aW9uSm9iIH0gZnJvbSBcIkAvdHlwZXNcIjtcbmltcG9ydCB7IG1vY2tJbmdlc3Rpb25Kb2JzIH0gZnJvbSBcIkAvbGliL21vY2tEYXRhXCI7XG5pbXBvcnQgeyBmZXRjaFdpdGhBdXRoIH0gZnJvbSBcIkAvbGliL2FwaVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBJbmdlc3Rpb25TdGF0dXMoKSB7XG4gIGNvbnN0IFtpbmdlc3Rpb25Kb2JzLCBzZXRJbmdlc3Rpb25Kb2JzXSA9IHVzZVN0YXRlPEluZ2VzdGlvbkpvYltdPihbXSk7XG4gIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKHRydWUpO1xuICBjb25zdCBbZXJyb3IsIHNldEVycm9yXSA9IHVzZVN0YXRlPHN0cmluZyB8IG51bGw+KG51bGwpO1xuICBjb25zdCBbcmVmcmVzaEludGVydmFsLCBzZXRSZWZyZXNoSW50ZXJ2YWxdID0gdXNlU3RhdGU8Tm9kZUpTLlRpbWVvdXQgfCBudWxsPihcbiAgICBudWxsXG4gICk7XG5cbiAgY29uc3QgZmV0Y2hKb2JzID0gYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBzZXRMb2FkaW5nKHRydWUpO1xuICAgICAgLy8gSW4gYSByZWFsIGFwcGxpY2F0aW9uLCB0aGlzIHdvdWxkIGZldGNoIGZyb20gdGhlIEFQSVxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcIi9hcGkvaW5nZXN0aW9uXCIpO1xuICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgIGNvbnNvbGUubG9nKGRhdGEsIFwiZGF0YVwiKTtcbiAgICAgIHNldEluZ2VzdGlvbkpvYnMoZGF0YSk7XG4gICAgICAvLyBGb3Igbm93LCB1c2UgbW9jayBkYXRhIGFuZCBzaW11bGF0ZSBqb2IgcHJvZ3Jlc3MgY2hhbmdlc1xuXG4gICAgICAvLyBTaW11bGF0ZSBwcm9ncmVzcyBjaGFuZ2UgZm9yIHByb2Nlc3Npbmcgam9ic1xuICAgICAgLy8gIGNvbnN0IHVwZGF0ZWRKb2JzID0gWy4uLm1vY2tJbmdlc3Rpb25Kb2JzXS5tYXAoKGpvYikgPT4ge1xuICAgICAgLy8gICAgaWYgKGpvYi5zdGF0dXMgPT09IFwicHJvY2Vzc2luZ1wiKSB7XG4gICAgICAvLyAgICAgIGNvbnN0IG5ld1Byb2dyZXNzID0gTWF0aC5taW4oXG4gICAgICAvLyAgICAgICAgam9iLnByb2dyZXNzICsgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApLFxuICAgICAgLy8gICAgICAgIDEwMFxuICAgICAgLy8gICAgICApO1xuXG4gICAgICAvLyAgICAgIC8vIE9uY2UgcHJvZ3Jlc3MgcmVhY2hlcyAxMDAsIG1hcmsgYXMgY29tcGxldGVkXG4gICAgICAvLyAgICAgIGlmIChuZXdQcm9ncmVzcyA9PT0gMTAwKSB7XG4gICAgICAvLyAgICAgICAgcmV0dXJuIHtcbiAgICAgIC8vICAgICAgICAgIC4uLmpvYixcbiAgICAgIC8vICAgICAgICAgIHByb2dyZXNzOiBuZXdQcm9ncmVzcyxcbiAgICAgIC8vICAgICAgICAgIHN0YXR1czogXCJjb21wbGV0ZWRcIiBhcyBjb25zdCxcbiAgICAgIC8vICAgICAgICAgIGNvbXBsZXRlZEF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICAvLyAgICAgICAgfTtcbiAgICAgIC8vICAgICAgfVxuXG4gICAgICAvLyAgICAgIHJldHVybiB7IC4uLmpvYiwgcHJvZ3Jlc3M6IG5ld1Byb2dyZXNzIH07XG4gICAgICAvLyAgICB9XG4gICAgICAvLyAgICByZXR1cm4gam9iO1xuICAgICAgLy8gIH0pO1xuXG4gICAgICAvLyAgc2V0SW5nZXN0aW9uSm9icyh1cGRhdGVkSm9icyk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHNldEVycm9yKFwiRmFpbGVkIHRvIGZldGNoIGluZ2VzdGlvbiBqb2JzXCIpO1xuICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGZldGNoaW5nIGluZ2VzdGlvbiBqb2JzOlwiLCBlcnJvcik7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xuICAgIH1cbiAgfTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGZldGNoSm9icygpO1xuXG4gICAgLy8gU2ltdWxhdGUgcmVhbC10aW1lIHVwZGF0ZXMgYnkgcG9sbGluZyBldmVyeSA1IHNlY29uZHNcbiAgICAvL2NvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoZmV0Y2hKb2JzLCAxMDAwMCk7XG4gICAgLy9zZXRSZWZyZXNoSW50ZXJ2YWwoaW50ZXJ2YWwpO1xuXG4gICAgLy9yZXR1cm4gKCkgPT4ge1xuICAgIC8vICBpZiAocmVmcmVzaEludGVydmFsKSB7XG4gICAgLy8gICAgY2xlYXJJbnRlcnZhbChyZWZyZXNoSW50ZXJ2YWwpO1xuICAgIC8vICB9XG4gICAgLy99O1xuICB9LCBbXSk7XG5cbiAgLy8gQ2FuY2VsIGFuIGluZ2VzdGlvbiBqb2JcbiAgY29uc3QgaGFuZGxlQ2FuY2VsSm9iID0gYXN5bmMgKGpvYklkOiBzdHJpbmcpID0+IHtcbiAgICB0cnkge1xuICAgICAgc2V0TG9hZGluZyh0cnVlKTtcbiAgICAgIC8vIEluIGEgcmVhbCBhcHBsaWNhdGlvbiwgdGhpcyB3b3VsZCBjYWxsIHRoZSBBUElcbiAgICAgIC8vIGF3YWl0IGZldGNoV2l0aEF1dGgoYC9pbmdlc3Rpb24vam9icy8ke2pvYklkfS9jYW5jZWxgLCB7XG4gICAgICAvLyAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgLy8gfSk7XG5cbiAgICAgIC8vIEZvciBub3csIHNpbXVsYXRlIGNhbmNlbGxhdGlvblxuICAgICAgYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgNTAwKSk7IC8vIFNpbXVsYXRlIEFQSSBkZWxheVxuXG4gICAgICAvLyAgc2V0SW5nZXN0aW9uSm9icyhcbiAgICAgIC8vICAgIGluZ2VzdGlvbkpvYnMubWFwKChqb2IpID0+XG4gICAgICAvLyAgICAgIGpvYi5pZCA9PT0gam9iSWRcbiAgICAgIC8vICAgICAgICA/IHsgLi4uam9iLCBzdGF0dXM6IFwiZmFpbGVkXCIsIGVycm9yOiBcIkpvYiBjYW5jZWxsZWQgYnkgdXNlclwiIH1cbiAgICAgIC8vICAgICAgICA6IGpvYlxuICAgICAgLy8gICAgKVxuICAgICAgLy8gICk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHNldEVycm9yKFwiRmFpbGVkIHRvIGNhbmNlbCBqb2JcIik7XG4gICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgY2FuY2VsbGluZyBqb2I6XCIsIGVycm9yKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgc2V0TG9hZGluZyhmYWxzZSk7XG4gICAgfVxuICB9O1xuXG4gIC8vIFJldHJ5IGEgZmFpbGVkIGluZ2VzdGlvbiBqb2JcbiAgY29uc3QgaGFuZGxlUmV0cnlKb2IgPSBhc3luYyAoam9iSWQ6IHN0cmluZykgPT4ge1xuICAgIHRyeSB7XG4gICAgICBzZXRMb2FkaW5nKHRydWUpO1xuICAgICAgLy8gSW4gYSByZWFsIGFwcGxpY2F0aW9uLCB0aGlzIHdvdWxkIGNhbGwgdGhlIEFQSVxuICAgICAgLy8gYXdhaXQgZmV0Y2hXaXRoQXV0aChgL2luZ2VzdGlvbi9qb2JzLyR7am9iSWR9L3JldHJ5YCwge1xuICAgICAgLy8gICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIC8vIH0pO1xuXG4gICAgICAvLyBGb3Igbm93LCBzaW11bGF0ZSByZXRyeVxuICAgICAgYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgNTAwKSk7IC8vIFNpbXVsYXRlIEFQSSBkZWxheVxuXG4gICAgICAvLyAgc2V0SW5nZXN0aW9uSm9icyhcbiAgICAgIC8vICAgIGluZ2VzdGlvbkpvYnMubWFwKChqb2IpID0+XG4gICAgICAvLyAgICAgIGpvYi5pZCA9PT0gam9iSWRcbiAgICAgIC8vICAgICAgICA/IHsgLi4uam9iLCBzdGF0dXM6IFwicHJvY2Vzc2luZ1wiLCBwcm9ncmVzczogMCwgZXJyb3I6IHVuZGVmaW5lZCB9XG4gICAgICAvLyAgICAgICAgOiBqb2JcbiAgICAgIC8vICAgIClcbiAgICAgIC8vICApO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBzZXRFcnJvcihcIkZhaWxlZCB0byByZXRyeSBqb2JcIik7XG4gICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgcmV0cnlpbmcgam9iOlwiLCBlcnJvcik7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBjb2x1bW5zID0gW1xuICAgIHtcbiAgICAgIGhlYWRlcjogXCJEb2N1bWVudFwiLFxuICAgICAgYWNjZXNzb3I6IFwiZG9jdW1lbnR0aXRsZVwiLFxuICAgIH0sXG4gICAge1xuICAgICAgaGVhZGVyOiBcIlN0YXR1c1wiLFxuICAgICAgYWNjZXNzb3I6IChqb2I6IEluZ2VzdGlvbkpvYikgPT4ge1xuICAgICAgICBjb25zdCBzdGF0dXNWYXJpYW50ID1cbiAgICAgICAgICBqb2Iuc3RhdHVzID09PSBcImNvbXBsZXRlZFwiID8gXCJzdWNjZXNzXCIgOiBcIndhcm5pbmdcIjtcblxuICAgICAgICByZXR1cm4gPEJhZGdlIHZhcmlhbnQ9e3N0YXR1c1ZhcmlhbnR9Pntqb2Iuc3RhdHVzfTwvQmFkZ2U+O1xuICAgICAgfSxcbiAgICB9LFxuICAgIHtcbiAgICAgIGhlYWRlcjogXCJQcm9ncmVzc1wiLFxuICAgICAgYWNjZXNzb3I6IChqb2I6IEluZ2VzdGlvbkpvYikgPT4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInctZnVsbCBiZy1ncmF5LTIwMCByb3VuZGVkLWZ1bGwgaC0yLjVcIj5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjbGFzc05hbWU9e2BoLTIuNSByb3VuZGVkLWZ1bGwgJHtcbiAgICAgICAgICAgICAgam9iLnN0YXR1cyA9PT0gXCJjb21wbGV0ZWRcIlxuICAgICAgICAgICAgICAgID8gXCJiZy1ncmVlbi02MDBcIlxuICAgICAgICAgICAgICAgIDogam9iLnN0YXR1cyA9PT0gXCJmYWlsZWRcIlxuICAgICAgICAgICAgICAgID8gXCJiZy1yZWQtNjAwXCJcbiAgICAgICAgICAgICAgICA6IFwiYmctYmx1ZS02MDBcIlxuICAgICAgICAgICAgfWB9XG4gICAgICAgICAgICBzdHlsZT17eyB3aWR0aDogYCR7am9iLnByb2dyZXNzfSVgIH19XG4gICAgICAgICAgPjwvZGl2PlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQteHMgdGV4dC1ncmF5LTYwMCBtdC0xXCI+e2pvYi5wcm9ncmVzc30lPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICksXG4gICAgfSxcbiAgICB7XG4gICAgICBoZWFkZXI6IFwiU3RhcnRlZFwiLFxuICAgICAgYWNjZXNzb3I6IChqb2I6IEluZ2VzdGlvbkpvYikgPT4gbmV3IERhdGUoam9iLnN0YXJ0ZWRhdCkudG9Mb2NhbGVTdHJpbmcoKSxcbiAgICB9LFxuICAgIHtcbiAgICAgIGhlYWRlcjogXCJDb21wbGV0ZWRcIixcbiAgICAgIGFjY2Vzc29yOiAoam9iOiBJbmdlc3Rpb25Kb2IpID0+XG4gICAgICAgIGpvYi51cGRhdGVkYXQgPyBuZXcgRGF0ZShqb2IudXBkYXRlZGF0KS50b0xvY2FsZVN0cmluZygpIDogXCItXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICBoZWFkZXI6IFwiQWN0aW9uc1wiLFxuICAgICAgYWNjZXNzb3I6IChqb2I6IEluZ2VzdGlvbkpvYikgPT4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggc3BhY2UteC0yXCI+XG4gICAgICAgICAge2pvYi5zdGF0dXMgPT09IFwicHJvY2Vzc2luZ1wiICYmIChcbiAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgdmFyaWFudD1cIm91dGxpbmVcIlxuICAgICAgICAgICAgICBzaXplPVwic21cIlxuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBoYW5kbGVDYW5jZWxKb2Ioam9iLmlkKX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgQ2FuY2VsXG4gICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICApfVxuICAgICAgICAgIHtqb2Iuc3RhdHVzID09PSBcImZhaWxlZFwiICYmIChcbiAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgdmFyaWFudD1cIm91dGxpbmVcIlxuICAgICAgICAgICAgICBzaXplPVwic21cIlxuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBoYW5kbGVSZXRyeUpvYihqb2IuaWQpfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICBSZXRyeVxuICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICApLFxuICAgIH0sXG4gIF07XG5cbiAgcmV0dXJuIChcbiAgICA8Q2FyZCB0aXRsZT1cIkluZ2VzdGlvbiBTdGF0dXNcIj5cbiAgICAgIHtsb2FkaW5nICYmICFpbmdlc3Rpb25Kb2JzLmxlbmd0aCA/IChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGp1c3RpZnktY2VudGVyIHB5LTEwXCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJhbmltYXRlLXNwaW4gcm91bmRlZC1mdWxsIGgtMTAgdy0xMCBib3JkZXItdC0yIGJvcmRlci1iLTIgYm9yZGVyLWJsdWUtNTAwXCI+PC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKSA6IGVycm9yID8gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInAtNCB0ZXh0LXJlZC01MDAgYmctcmVkLTEwMCByb3VuZGVkLW1kXCI+e2Vycm9yfTwvZGl2PlxuICAgICAgKSA6IChcbiAgICAgICAgPD5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1iLTQgZmxleCBqdXN0aWZ5LWVuZFwiPlxuICAgICAgICAgICAgPEJ1dHRvbiB2YXJpYW50PVwib3V0bGluZVwiIHNpemU9XCJzbVwiIG9uQ2xpY2s9e2ZldGNoSm9ic30+XG4gICAgICAgICAgICAgIFJlZnJlc2hcbiAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxUYWJsZVxuICAgICAgICAgICAgY29sdW1ucz17Y29sdW1uc31cbiAgICAgICAgICAgIGRhdGE9e2luZ2VzdGlvbkpvYnN9XG4gICAgICAgICAgICBlbXB0eU1lc3NhZ2U9XCJObyBpbmdlc3Rpb24gam9icyBmb3VuZFwiXG4gICAgICAgICAgLz5cbiAgICAgICAgPC8+XG4gICAgICApfVxuICAgIDwvQ2FyZD5cbiAgKTtcbn1cbiJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkNhcmQiLCJCYWRnZSIsIlRhYmxlIiwiQnV0dG9uIiwiSW5nZXN0aW9uU3RhdHVzIiwiaW5nZXN0aW9uSm9icyIsInNldEluZ2VzdGlvbkpvYnMiLCJsb2FkaW5nIiwic2V0TG9hZGluZyIsImVycm9yIiwic2V0RXJyb3IiLCJyZWZyZXNoSW50ZXJ2YWwiLCJzZXRSZWZyZXNoSW50ZXJ2YWwiLCJmZXRjaEpvYnMiLCJyZXNwb25zZSIsImZldGNoIiwiZGF0YSIsImpzb24iLCJjb25zb2xlIiwibG9nIiwiaGFuZGxlQ2FuY2VsSm9iIiwiam9iSWQiLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiLCJoYW5kbGVSZXRyeUpvYiIsImNvbHVtbnMiLCJoZWFkZXIiLCJhY2Nlc3NvciIsImpvYiIsInN0YXR1c1ZhcmlhbnQiLCJzdGF0dXMiLCJ2YXJpYW50IiwiZGl2IiwiY2xhc3NOYW1lIiwic3R5bGUiLCJ3aWR0aCIsInByb2dyZXNzIiwic3BhbiIsIkRhdGUiLCJzdGFydGVkYXQiLCJ0b0xvY2FsZVN0cmluZyIsInVwZGF0ZWRhdCIsInNpemUiLCJvbkNsaWNrIiwiaWQiLCJ0aXRsZSIsImxlbmd0aCIsImVtcHR5TWVzc2FnZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/components/ingestion/IngestionStatus.tsx\n"));

/***/ })

});