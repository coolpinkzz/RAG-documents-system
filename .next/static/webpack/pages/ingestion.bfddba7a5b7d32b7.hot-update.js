"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/ingestion",{

/***/ "(pages-dir-browser)/./src/components/ingestion/IngestionTrigger.tsx":
/*!*******************************************************!*\
  !*** ./src/components/ingestion/IngestionTrigger.tsx ***!
  \*******************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IngestionTrigger)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_ui_Card__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/ui/Card */ \"(pages-dir-browser)/./src/components/ui/Card.tsx\");\n/* harmony import */ var _components_ui_Button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/ui/Button */ \"(pages-dir-browser)/./src/components/ui/Button.tsx\");\n/* harmony import */ var _components_ui_Select__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/ui/Select */ \"(pages-dir-browser)/./src/components/ui/Select.tsx\");\n\nvar _s = $RefreshSig$();\n\n\n\n\nfunction IngestionTrigger() {\n    _s();\n    const [documents, setDocuments] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [selectedDocumentId, setSelectedDocumentId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [triggering, setTriggering] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [success, setSuccess] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"IngestionTrigger.useEffect\": ()=>{\n            const fetchDocuments = {\n                \"IngestionTrigger.useEffect.fetchDocuments\": async ()=>{\n                    try {\n                        setLoading(true);\n                        // In a real application, this would fetch from the API\n                        // const response = await fetchWithAuth<Document[]>('/documents');\n                        const res = await fetch(\"/api/get-documents\");\n                        const data = await res.json();\n                        console.log(\"data\", data.documents);\n                        // For now, use the mock data (only showing documents that are not being processed)\n                        setDocuments(data.documents.filter({\n                            \"IngestionTrigger.useEffect.fetchDocuments\": (doc)=>!doc.isInjected\n                        }[\"IngestionTrigger.useEffect.fetchDocuments\"]));\n                    } catch (error) {\n                        setError(\"Failed to fetch documents\");\n                        console.error(\"Error fetching documents:\", error);\n                    } finally{\n                        setLoading(false);\n                    }\n                }\n            }[\"IngestionTrigger.useEffect.fetchDocuments\"];\n            fetchDocuments();\n        }\n    }[\"IngestionTrigger.useEffect\"], []);\n    const handleTriggerIngestion = async ()=>{\n        if (!selectedDocumentId) {\n            setError(\"Please select a document\");\n            return;\n        }\n        try {\n            setTriggering(true);\n            setError(null);\n            setSuccess(null);\n            // In a real application, this would call the API\n            // await fetchWithAuth('/ingestion/jobs', {\n            //   method: 'POST',\n            //   body: JSON.stringify({ documentId: selectedDocumentId }),\n            // });\n            const getDocument = documents.find((doc)=>doc.id === selectedDocumentId);\n            await fetch(\"/api/ingestion\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    documentId: selectedDocumentId,\n                    documentTitle: \"Annual Report 2023\",\n                    filePath: \"/uploads/pratik_yadav_resume_ai.pdf\"\n                })\n            });\n            // For now, simulate the ingestion trigger\n            await new Promise((resolve)=>setTimeout(resolve, 1000)); // Simulate API delay\n            setSuccess(\"Ingestion started successfully\");\n            setSelectedDocumentId(\"\");\n        } catch (error) {\n            setError(\"Failed to trigger ingestion\");\n            console.error(\"Error triggering ingestion:\", error);\n        } finally{\n            setTriggering(false);\n        }\n    };\n    const documentOptions = documents.map((doc)=>({\n            value: doc.id,\n            label: doc.title\n        }));\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_Card__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n        title: \"Trigger Document Ingestion\",\n        children: loading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex justify-center py-10\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"animate-spin rounded-full h-10 w-10 border-t-2 border-b-2 border-blue-500\"\n            }, void 0, false, {\n                fileName: \"/Users/pratikyadav/Downloads/DocumentIntelligence/src/components/ingestion/IngestionTrigger.tsx\",\n                lineNumber: 92,\n                columnNumber: 11\n            }, this)\n        }, void 0, false, {\n            fileName: \"/Users/pratikyadav/Downloads/DocumentIntelligence/src/components/ingestion/IngestionTrigger.tsx\",\n            lineNumber: 91,\n            columnNumber: 9\n        }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"space-y-6\",\n            children: [\n                error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"p-3 text-sm text-red-700 bg-red-100 rounded-md\",\n                    children: error\n                }, void 0, false, {\n                    fileName: \"/Users/pratikyadav/Downloads/DocumentIntelligence/src/components/ingestion/IngestionTrigger.tsx\",\n                    lineNumber: 97,\n                    columnNumber: 13\n                }, this),\n                success && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"p-3 text-sm text-green-700 bg-green-100 rounded-md\",\n                    children: success\n                }, void 0, false, {\n                    fileName: \"/Users/pratikyadav/Downloads/DocumentIntelligence/src/components/ingestion/IngestionTrigger.tsx\",\n                    lineNumber: 103,\n                    columnNumber: 13\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-sm text-gray-600 mb-4\",\n                            children: \"Select a document to process and make it available for search and Q&A. This will extract text, analyze content, and index the document.\"\n                        }, void 0, false, {\n                            fileName: \"/Users/pratikyadav/Downloads/DocumentIntelligence/src/components/ingestion/IngestionTrigger.tsx\",\n                            lineNumber: 109,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_Select__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                            label: \"Select Document\",\n                            id: \"document-select\",\n                            value: selectedDocumentId,\n                            onChange: (e)=>setSelectedDocumentId(e.target.value),\n                            options: [\n                                {\n                                    value: \"\",\n                                    label: \"Choose a document...\"\n                                },\n                                ...documentOptions\n                            ],\n                            disabled: documentOptions.length === 0 || triggering\n                        }, void 0, false, {\n                            fileName: \"/Users/pratikyadav/Downloads/DocumentIntelligence/src/components/ingestion/IngestionTrigger.tsx\",\n                            lineNumber: 115,\n                            columnNumber: 13\n                        }, this),\n                        documentOptions.length === 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"mt-2 text-sm text-amber-600\",\n                            children: \"No available documents found. Please upload a document first.\"\n                        }, void 0, false, {\n                            fileName: \"/Users/pratikyadav/Downloads/DocumentIntelligence/src/components/ingestion/IngestionTrigger.tsx\",\n                            lineNumber: 128,\n                            columnNumber: 15\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/pratikyadav/Downloads/DocumentIntelligence/src/components/ingestion/IngestionTrigger.tsx\",\n                    lineNumber: 108,\n                    columnNumber: 11\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex justify-end\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_Button__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                        onClick: handleTriggerIngestion,\n                        disabled: !selectedDocumentId || triggering,\n                        isLoading: triggering,\n                        children: triggering ? \"Starting Ingestion...\" : \"Start Ingestion\"\n                    }, void 0, false, {\n                        fileName: \"/Users/pratikyadav/Downloads/DocumentIntelligence/src/components/ingestion/IngestionTrigger.tsx\",\n                        lineNumber: 135,\n                        columnNumber: 13\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/pratikyadav/Downloads/DocumentIntelligence/src/components/ingestion/IngestionTrigger.tsx\",\n                    lineNumber: 134,\n                    columnNumber: 11\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/pratikyadav/Downloads/DocumentIntelligence/src/components/ingestion/IngestionTrigger.tsx\",\n            lineNumber: 95,\n            columnNumber: 9\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/pratikyadav/Downloads/DocumentIntelligence/src/components/ingestion/IngestionTrigger.tsx\",\n        lineNumber: 89,\n        columnNumber: 5\n    }, this);\n}\n_s(IngestionTrigger, \"qmOlUDU4vZ5h5iFamOEVjkN1E2Q=\");\n_c = IngestionTrigger;\nvar _c;\n$RefreshReg$(_c, \"IngestionTrigger\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/components/ingestion/IngestionTrigger.tsx\n"));

/***/ })

});